---
#
# Task to Create AWS EKS Cluster
#
# arguments:
# my_public_ip=controller machine public ip
# eks_cluster_name=<any string>
#
# tags:
# create_eks_cluster
#

- name: Include Provision VPC Task
  include_role:
    name: vpc_operations
  vars:
    vpc_operation: "create_vpc"
  tags:
    - create_eks_cluster 

- name: Gather VPC facts
  ec2_vpc_net_facts:
    filters:
      "tag:Name": "{{vpc.name}}"
    region: "{{region}}"
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_key}}"
  register: vpc_details
  tags:
    - create_eks_cluster

- name: Provision Security Group for Control Plane 
  ec2_group:
    name: "{{eks.control_plane.sg_name}}"
    description: "Security Group for {{eks.control_plane.sg_name}}"
    vpc_id: "{{vpc_details.vpcs[0].id}}"
    region: "{{region}}"
    tags:
      Name: "{{eks.control_plane.sg_name}}"
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_key}}"
  register: controlplane_sg_details
  tags:
    - create_eks_cluster

- name: Include Get Subnet Task for Subnet1
  include_tasks: ../vpc_operations/tasks/get_subnet.yml
  vars:
    vpc_id: "{{vpc_details.vpcs[0].id}}"
    subnet_tag: "{{subnet1_tag}}"

- name: Set fact for subnet1 id
  set_fact:
    subnet1_id: "{{subnet_details.subnets[0].id}}"

- name: Include Get Subnet Task for Subnet2
  include_tasks: ../vpc_operations/tasks/get_subnet.yml
  vars:
    vpc_id: "{{vpc_details.vpcs[0].id}}"
    subnet_tag: "{{subnet2_tag}}"

- name: Set fact for subnet2 id
  set_fact:
    subnet2_id: "{{subnet_details.subnets[0].id}}"

- name: Include Get Subnet Task for Subnet3
  include_tasks: ../vpc_operations/tasks/get_subnet.yml
  vars:
    vpc_id: "{{vpc_details.vpcs[0].id}}"
    subnet_tag: "{{subnet3_tag}}"

- name: Set fact for subnet3 id
  set_fact:
    subnet3_id: "{{subnet_details.subnets[0].id}}"

- name: Provision EKS Cluster and await ACTIVE status
  aws_eks_cluster:
    name: "{{eks_cluster_name}}"
    version: "{{eks.kubernetes_version}}"
    role_arn: "{{eks.service_role_arn}}"
    subnets:
      - "{{subnet1_id}}"
      - "{{subnet2_id}}"
      - "{{subnet3_id}}"
    security_groups:
      - "{{controlplane_sg_details.group_id}}"
    wait: yes
    wait_timeout: 1200
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_key}}"
  register: eks_cluster_details
  tags:
    - create_eks_cluster

- name: Print EKS Cluster details
  debug:
    msg: "{{eks_cluster_details}}"
  tags:
    - create_eks_cluster

